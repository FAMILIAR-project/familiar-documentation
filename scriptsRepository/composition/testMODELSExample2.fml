// same as first example
fm1 = FM (S : [F1] F2 [F4] ; F2 : (F5|F6) ; ) // F1, F4 optionals, F5 and F6 mutually exclusive 
fm2 = FM (S : F1 F2 [F3] ; F2 : [F5] [F6] ; ) // F5, F6 still subfeatures of F2 but optionals, F1 mandatory 
fm3 = FM (S : [F1] F2 [F4] ; F2 : [F5] [F6] ; F5 -> F1 ; ) // F5 implies F1

fmNewView = FM (S : [F8] [F56] ; F8 : [F3] [F4] ; )

csts = constraints (F56 <-> (fm1_F5 or fm2_F5 or fm3_F5 or fm1_F6 or fm2_F6 or fm3_F6) ; 
F4 <-> (fm1_F4 or fm3_F4) ; 
F3 <-> fm2_F3 ; 
F8 <-> (fm2_F3 or fm1_F4 or fm3_F4) ; 
)

fm4bis = aggregate --renamings { fmNewView fm1 fm2 fm3 } withMapping csts

fm5bis= slice fm4bis including fmNewView.*
